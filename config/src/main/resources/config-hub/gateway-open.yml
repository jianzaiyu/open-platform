server:
  port: 8099

swagger2:
  enabled: false

mybatis:
  mapperLocations: classpath*:cn/ce/**/mapper/*.xml
  scanPackages: cn.ce.**.dao
  typeAliasesPackage: cn.ce.**.entity

spring:
  zipkin:
    enabled: true
  datasource:
      url: jdbc:mysql://10.12.40.224:3306/openplatform?useSSL=false&useUnicode=true&characterEncoding=utf8
      username: onlineDB
      password: bo28jsl29a
  #    url: jdbc:mysql://localhost:3306/auth_centre?useSSL=false&useUnicode=true&characterEncoding=utf8
  #    username: root
  #    password: 123456
      driverClassName: com.mysql.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      druid:
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
        minIdle: 5
        useGlobalDataSourceStat: true
        validationQuery: SELECT 1 FROM DUAL
        initialSize: 5
        maxWait: 60000
        filters: stat,wall,slf4j
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        testWhileIdle: true
        testOnBorrow: false
        minEvictableIdleTimeMillis: 300000
        timeBetweenEvictionRunsMillis: 60000
        testOnReturn: false
        maxActive: 20
        webStatFilter:
          enabled: true
        statViewServlet:
          enabled: true
          loginUsername: ${spring.security.user.name}
          loginPassword: ${spring.security.user.password}
          resetEnable: true
  cloud:
    stream:
      default:
        producer:
          headerMode: embeddedHeaders
        consumer:
          headerMode: embeddedHeaders
      bindings:
        springCloudBusInput:
          destination: GATEWAY_NODE_SETTING
          group: cloud-bus-testgroup:1
        springCloudBusOutput:
          destination: GATEWAY_NODE_SETTING
      kafka:
        binder:
          autoCreateTopics: false
          brokers: 10.12.51.187:6667
          zkNodes: ${kafka.zookeeper.quorum}

security:
  oauth2:
    client:
      clientId: inner_service
      clientSecret: 123456
    resource:
      tokenInfoUri: http://service-auth/oauth/check_token
      white-list:
        emptyPrefix:
          httpAllMethod: /actuator/**


zuul:
  SendErrorFilter:
    error:
      disable : true
  retryable: false  #zuul.routes.<routename>.retryable=true
  ignoredServices: '*'
  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000
  sensitiveHeaders:
#    b-services:
#      path: /b/**
#      sensitiveHeaders:
#    user-route:      # 该配置方式中，user-route只是给路由一个名称，可以任意起名。
#     url:http://localhost:8000/  # 指定的url
#     path: /user/**      # url对应的路径。